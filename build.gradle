buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
        classpath "gradle.plugin.io.morethan.jmhreport:gradle-jmh-report:0.4.1"
    }
}

repositories {
    jcenter()
}

subprojects {
    apply plugin: 'me.champeau.gradle.jmh'
    apply plugin: 'io.morethan.jmhreport'
    // apply plugin: 'ajk.gradle.elastic'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        jmh 'org.slf4j:slf4j-simple:1.7.25'
    }

    jmh {
        iterations = 3
        // benchmarkMode = ['thrpt','avgt']
        // batchSize = 1 // Batch size: number of benchmark method calls per operation. (some benchmark modes can ignore this setting)
        fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
        failOnError = false
        // forceGC = false // Should JMH force GC between iterations?
        humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt") // human-readable output file
        resultsFile = project.file("${project.buildDir}/reports/jmh/results.json") // results file
        // operationsPerInvocation = 3
        // timeOnIteration = '1s' // Time to spend at each measurement iteration.
        resultFormat = 'JSON' // Result format type (one of CSV, JSON, NONE, SCSV, TEXT)
        // synchronizeIterations = false // Synchronize iterations?
        // threads = 4 // Number of worker threads to run with.
        // threadGroups = [2,3,4] //Override thread group distribution for asymmetric benchmarks.
        // timeout = '1s' // Timeout for benchmark iteration.
        // timeUnit = 'ms' // Output time unit. Available time units are: [m, s, ms, us, ns].
        // verbosity = 'NORMAL' // Verbosity mode. Available modes are: [SILENT, NORMAL, EXTRA]
        // warmup = '1s' // Time to spend at each warmup iteration.
        // warmupBatchSize = 3
        // warmupForks = 0 // How many warmup forks to make for a single benchmark. 0 to disable warmup forks.
        warmupIterations = 3 // Number of warmup iterations to do.
        jmhVersion = '1.19'
    }

    jmhReport {
        jmhResultPath = project.file("${project.buildDir}/reports/jmh/results.json")
        jmhReportOutput = project.file('build/reports/jmh')
    }
    tasks.jmh.finalizedBy tasks.jmhReport
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
